<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
	 <!--开启标签方式注入  -->
	 <context:annotation-config/>
	 <!--类似hibernate.cfg.xml主配置文件的工作，都转移到下面这个对象来做。  -->
	 <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
	    <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
	    <property name="url" value="jdbc:mysql://localhost:3306/bookstore?useUnicode=true&amp;characterEncoding=UTF-8"/>
	    <property name="username" value="root"/>
	    <property name="password" value="123"/>
	     <!-- 连接池启动时的初始值 -->
		 <property name="initialSize" value="1"/>
		 <!-- 连接池的最大值 -->
		 <property name="maxActive" value="500"/>
		 <!-- 最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 -->
		 <property name="maxIdle" value="2"/>
		 <!--  最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请 -->
		 <property name="minIdle" value="1"/>
	  </bean>
	  
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
	     <!-- 将上面的配置信息注入进来 -->
	     <property name="dataSource" ref="dataSource"/>
		 <property name="mappingResources">
		    <list>
		    	<!--注入hibernate对象和库的映射文件,这里是list集合的方式，所以可以注入多个映射文件  -->
		   	  <value>Person.hbm.xml</value>
		    </list>
		 </property>
		 <!-- 这里的配置完全可以移动到上面的dataSource -->
	     <property name="hibernateProperties">
		    <value>
		        hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
		        hibernate.hbm2ddl.auto=update
		        hibernate.show_sql=false
		        hibernate.format_sql=false
		        <!--开启缓存  -->
		        hibernate.cache.use_second_level_cache=true
		        <!--查询是否缓存  -->
       	        hibernate.cache.use_query_cache=false
       	        <!-- 缓存处理器 -->
        	    hibernate.cache.provider_class=org.hibernate.cache.EhCacheProvider
		      </value>
	     </property>
	</bean>
	<!--将经过装饰的session工厂交给 spring容器的事物管理器管理。 -->
	<bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
	  	<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	<!--开启事物管理器  -->
	<tx:annotation-driven transaction-manager="txManager"/>
	<bean id="categoryService" class="enter.lzj.filter.category.service.impl.ServiceBean"/>
	<bean name="/categoryQueryAll" class="enter.lzj.filter.category.servlet.MyAction"></bean>
	<bean name="/categoryQueryAllBook" class="enter.lzj.filter.category.servlet.MyAction"></bean>
	<bean name="/bookSingleQuery" class="enter.lzj.filter.category.servlet.MyAction"></bean>
	
	<!--————————————————————————user————————————————————————————————————————————————————————  -->
	<bean id="userService" class="enter.lzj.user.service.impl.ServiceBean"/>
	<bean name="/register" class="enter.lzj.user.servlet.MyAction"></bean>
	<bean name="/alive" class="enter.lzj.user.servlet.MyAction"></bean>
	<bean name="/login" class="enter.lzj.user.servlet.MyAction"></bean>
	<bean name="/muenbar" class="enter.lzj.user.servlet.MyAction"></bean>
	<bean name="/exit" class="enter.lzj.user.servlet.MyAction"></bean>
	<!--___________________________car___________________________________  -->
	<bean id="carService" class="enter.lzj.car.service.impl.ServiceBean"/>
	<bean name="/addCar" class="enter.lzj.car.servlet.Action4Car"></bean>
	<bean name="/carQueryAll" class="enter.lzj.car.servlet.Action4Car"></bean>
	<!--___________________________order_________________________________________________-->
	<bean id="orderService" class="enter.lzj.myorder.impl.ServiceBean"/>
	<bean name="/pay" class="enter.lzj.myorder.servlet.Action4Order"></bean>
	<bean name="/orderQueryAll" class="enter.lzj.myorder.servlet.Action4Order"></bean>
	
	
</beans>
